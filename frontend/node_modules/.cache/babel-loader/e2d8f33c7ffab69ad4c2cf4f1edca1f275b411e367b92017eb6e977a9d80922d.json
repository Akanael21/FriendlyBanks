{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\FriendlyBanks\\\\frontend\\\\src\\\\components\\\\Profile.tsx\",\n  _s = $RefreshSig$();\n// src/components/Profile.tsx\n\nimport React, { useState, useEffect } from 'react';\nimport { useAuth } from '../context/AuthContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUser, faEnvelope, faPhone, faLock, faSave } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000/api';\nconst Profile = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const [profile, setProfile] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: ''\n  });\n  const [password, setPassword] = useState({\n    current: '',\n    new: '',\n    confirm: ''\n  });\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [loadingPassword, setLoadingPassword] = useState(false);\n\n  // Fonction pour récupérer le token depuis le AuthContext\n  const getAuthToken = () => {\n    // D'abord essayer depuis le contexte user\n    if (user !== null && user !== void 0 && user.token) {\n      return user.token;\n    }\n\n    // Sinon essayer depuis localStorage\n    const storedUser = localStorage.getItem('friendlybanks_user');\n    if (storedUser) {\n      try {\n        const userData = JSON.parse(storedUser);\n        return userData.token;\n      } catch (error) {\n        console.error('Erreur lors de la lecture du token:', error);\n      }\n    }\n    console.log('Aucun token trouvé');\n    return null;\n  };\n\n  // Fonction pour rafraîchir le token\n  const refreshToken = async () => {\n    try {\n      const refreshToken = localStorage.getItem('friendlybanks_refresh');\n      if (!refreshToken) {\n        throw new Error('No refresh token available');\n      }\n      const response = await fetch(`${API_BASE_URL}/token/refresh/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          refresh: refreshToken\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        const newAccessToken = data.access;\n\n        // Mettre à jour le token dans localStorage\n        const storedUser = localStorage.getItem('friendlybanks_user');\n        if (storedUser) {\n          const userData = JSON.parse(storedUser);\n          userData.token = newAccessToken;\n          localStorage.setItem('friendlybanks_user', JSON.stringify(userData));\n        }\n        return newAccessToken;\n      } else {\n        throw new Error('Failed to refresh token');\n      }\n    } catch (error) {\n      console.error('Error refreshing token:', error);\n      // Rediriger vers la page de connexion ou logout\n      setMessage('Session expirée. Veuillez vous reconnecter.');\n      return null;\n    }\n  };\n\n  // Fonction pour faire une requête avec gestion automatique du token\n  const authenticatedFetch = async (url, options = {}) => {\n    let token = getAuthToken();\n    if (!token) {\n      throw new Error('No token available');\n    }\n\n    // Première tentative avec le token actuel\n    let response = await fetch(url, {\n      ...options,\n      headers: {\n        ...options.headers,\n        'Authorization': `Bearer ${token}`,\n        'Content-Type': 'application/json'\n      }\n    });\n\n    // Si 401, essayer de rafraîchir le token et refaire la requête\n    if (response.status === 401) {\n      console.log('Token expired, trying to refresh...');\n      const newToken = await refreshToken();\n      if (newToken) {\n        response = await fetch(url, {\n          ...options,\n          headers: {\n            ...options.headers,\n            'Authorization': `Bearer ${newToken}`,\n            'Content-Type': 'application/json'\n          }\n        });\n      }\n    }\n    return response;\n  };\n\n  // Charger les données du profil au montage du composant\n  useEffect(() => {\n    fetchProfile();\n  }, []);\n  const fetchProfile = async () => {\n    try {\n      const response = await authenticatedFetch(`${API_BASE_URL}/user/profile/`);\n      if (response.ok) {\n        const userData = await response.json();\n        setProfile({\n          firstName: userData.firstName || '',\n          lastName: userData.lastName || '',\n          email: userData.email || '',\n          phone: userData.phone || ''\n        });\n      } else {\n        var _user$username, _user$username2;\n        // Fallback avec les données de l'utilisateur connecté\n        setProfile({\n          firstName: (user === null || user === void 0 ? void 0 : (_user$username = user.username) === null || _user$username === void 0 ? void 0 : _user$username.split(' ')[0]) || '',\n          lastName: (user === null || user === void 0 ? void 0 : (_user$username2 = user.username) === null || _user$username2 === void 0 ? void 0 : _user$username2.split(' ')[1]) || '',\n          email: '',\n          // Sera rempli depuis l'API\n          phone: ''\n        });\n      }\n    } catch (error) {\n      console.error('Erreur lors du chargement du profil:', error);\n      setMessage('Erreur lors du chargement du profil');\n      setTimeout(() => setMessage(''), 3000);\n    }\n  };\n  const handleProfileChange = e => {\n    setProfile({\n      ...profile,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handlePasswordChange = e => {\n    setPassword({\n      ...password,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleProfileSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const response = await authenticatedFetch(`${API_BASE_URL}/user/profile/`, {\n        method: 'PUT',\n        body: JSON.stringify(profile)\n      });\n      if (response.ok) {\n        const responseData = await response.json();\n        console.log('Success response:', responseData);\n        setMessage('Profil mis à jour avec succès !');\n        // Optionnel: recharger les données du profil\n        await fetchProfile();\n      } else {\n        const errorData = await response.json();\n        console.log('Error response:', errorData);\n        setMessage(errorData.message || 'Erreur lors de la mise à jour du profil');\n      }\n    } catch (error) {\n      console.error('Network or parsing error:', error);\n      setMessage('Erreur lors de la mise à jour du profil');\n    } finally {\n      setLoading(false);\n      setTimeout(() => setMessage(''), 3000);\n    }\n  };\n  const handlePasswordSubmit = async e => {\n    e.preventDefault();\n    if (password.new !== password.confirm) {\n      setMessage('Les nouveaux mots de passe ne correspondent pas.');\n      setTimeout(() => setMessage(''), 3000);\n      return;\n    }\n    if (password.new.length < 8) {\n      setMessage('Le nouveau mot de passe doit faire au moins 8 caractères.');\n      setTimeout(() => setMessage(''), 3000);\n      return;\n    }\n    setLoadingPassword(true);\n    try {\n      const response = await authenticatedFetch(`${API_BASE_URL}/user/change-password/`, {\n        method: 'PUT',\n        body: JSON.stringify({\n          currentPassword: password.current,\n          newPassword: password.new\n        })\n      });\n      if (response.ok) {\n        setMessage('Mot de passe mis à jour avec succès !');\n        setPassword({\n          current: '',\n          new: '',\n          confirm: ''\n        });\n      } else {\n        const errorData = await response.json();\n        setMessage(errorData.message || 'Erreur lors du changement de mot de passe');\n      }\n    } catch (error) {\n      console.error('Erreur lors du changement de mot de passe:', error);\n      setMessage('Erreur lors du changement de mot de passe');\n    } finally {\n      setLoadingPassword(false);\n      setTimeout(() => setMessage(''), 3000);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      style: styles.header,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        style: styles.headerTitle,\n        children: \"Param\\xE8tres du Compte\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        ...styles.message,\n        ...(message.includes('succès') ? styles.successMessage : styles.errorMessage)\n      },\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.grid,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.cardTitle,\n          children: \"Informations Personnelles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleProfileSubmit,\n          style: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Pr\\xE9nom\",\n            name: \"firstName\",\n            value: profile.firstName,\n            onChange: handleProfileChange,\n            icon: faUser,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Nom\",\n            name: \"lastName\",\n            value: profile.lastName,\n            onChange: handleProfileChange,\n            icon: faUser,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Email\",\n            name: \"email\",\n            type: \"email\",\n            value: profile.email,\n            onChange: handleProfileChange,\n            icon: faEnvelope,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"T\\xE9l\\xE9phone\",\n            name: \"phone\",\n            type: \"tel\",\n            value: profile.phone,\n            onChange: handleProfileChange,\n            icon: faPhone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: styles.button,\n            disabled: loading,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSave,\n              style: {\n                marginRight: '8px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 29\n            }, this), loading ? 'Enregistrement...' : 'Enregistrer les Modifications']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: styles.cardTitle,\n          children: \"Changer le Mot de Passe\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handlePasswordSubmit,\n          style: styles.form,\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Mot de passe actuel\",\n            name: \"current\",\n            type: \"password\",\n            value: password.current,\n            onChange: handlePasswordChange,\n            icon: faLock,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Nouveau mot de passe\",\n            name: \"new\",\n            type: \"password\",\n            value: password.new,\n            onChange: handlePasswordChange,\n            icon: faLock,\n            required: true,\n            minLength: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Confirmer le nouveau mot de passe\",\n            name: \"confirm\",\n            type: \"password\",\n            value: password.confirm,\n            onChange: handlePasswordChange,\n            icon: faLock,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: styles.button,\n            disabled: loadingPassword,\n            children: loadingPassword ? 'Changement...' : 'Changer le Mot de Passe'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n// Sous-composant pour les champs avec typage approprié\n_s(Profile, \"u5yvyWimeFMU0t0dasuu6WHWWWA=\", false, function () {\n  return [useAuth];\n});\n_c = Profile;\nconst InputField = ({\n  label,\n  icon,\n  type = 'text',\n  required = false,\n  minLength,\n  ...props\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    marginBottom: '16px'\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    style: styles.label,\n    children: [label, required && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#ef4444'\n      },\n      children: \" *\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: icon,\n      style: styles.inputIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      style: styles.input,\n      type: type,\n      required: required,\n      minLength: minLength,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 378,\n  columnNumber: 5\n}, this);\n_c2 = InputField;\nconst styles = {\n  header: {\n    marginBottom: '32px'\n  },\n  headerTitle: {\n    fontSize: '28px',\n    fontWeight: 'bold',\n    color: '#1f2937',\n    margin: 0\n  },\n  grid: {\n    display: 'grid',\n    gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))',\n    gap: '24px'\n  },\n  card: {\n    backgroundColor: 'white',\n    padding: '24px',\n    borderRadius: '12px',\n    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.08)'\n  },\n  cardTitle: {\n    fontSize: '20px',\n    fontWeight: 'bold',\n    color: '#1f2937',\n    margin: '0 0 24px 0',\n    borderBottom: '1px solid #e5e7eb',\n    paddingBottom: '12px'\n  },\n  form: {\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  label: {\n    display: 'block',\n    marginBottom: '8px',\n    fontWeight: '600',\n    color: '#374151',\n    fontSize: '14px'\n  },\n  input: {\n    width: '100%',\n    padding: '10px 10px 10px 40px',\n    border: '1px solid #d1d5db',\n    borderRadius: '8px',\n    boxSizing: 'border-box',\n    fontSize: '16px',\n    transition: 'border-color 0.2s ease'\n  },\n  inputIcon: {\n    position: 'absolute',\n    top: '13px',\n    left: '12px',\n    color: '#9ca3af'\n  },\n  button: {\n    padding: '10px 16px',\n    backgroundColor: '#2563eb',\n    color: 'white',\n    border: 'none',\n    borderRadius: '8px',\n    cursor: 'pointer',\n    fontWeight: '600',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    fontSize: '14px',\n    marginTop: '8px',\n    transition: 'background-color 0.2s ease'\n  },\n  message: {\n    padding: '12px',\n    borderRadius: '8px',\n    textAlign: 'center',\n    marginBottom: '24px',\n    fontWeight: 500\n  },\n  successMessage: {\n    color: '#166534',\n    backgroundColor: '#dcfce7',\n    border: '1px solid #bbf7d0'\n  },\n  errorMessage: {\n    color: '#dc2626',\n    backgroundColor: '#fee2e2',\n    border: '1px solid #fecaca'\n  }\n};\nexport default Profile;\nvar _c, _c2;\n$RefreshReg$(_c, \"Profile\");\n$RefreshReg$(_c2, \"InputField\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","FontAwesomeIcon","faUser","faEnvelope","faPhone","faLock","faSave","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","Profile","_s","user","profile","setProfile","firstName","lastName","email","phone","password","setPassword","current","new","confirm","message","setMessage","loading","setLoading","loadingPassword","setLoadingPassword","getAuthToken","token","storedUser","localStorage","getItem","userData","JSON","parse","error","console","log","refreshToken","Error","response","fetch","method","headers","body","stringify","refresh","ok","data","json","newAccessToken","access","setItem","authenticatedFetch","url","options","status","newToken","fetchProfile","_user$username","_user$username2","username","split","setTimeout","handleProfileChange","e","target","name","value","handlePasswordChange","handleProfileSubmit","preventDefault","responseData","errorData","handlePasswordSubmit","length","currentPassword","newPassword","children","style","styles","header","headerTitle","fileName","_jsxFileName","lineNumber","columnNumber","includes","successMessage","errorMessage","grid","card","cardTitle","onSubmit","form","InputField","label","onChange","icon","required","type","button","disabled","marginRight","minLength","_c","props","marginBottom","color","position","inputIcon","input","_c2","fontSize","fontWeight","margin","display","gridTemplateColumns","gap","backgroundColor","padding","borderRadius","boxShadow","borderBottom","paddingBottom","flexDirection","width","border","boxSizing","transition","top","left","cursor","alignItems","justifyContent","marginTop","textAlign","$RefreshReg$"],"sources":["D:/Projects/FriendlyBanks/frontend/src/components/Profile.tsx"],"sourcesContent":["// src/components/Profile.tsx\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUser, faEnvelope, faPhone, faLock, faSave } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000/api';\r\n\r\ninterface ProfileData {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    phone: string;\r\n}\r\n\r\ninterface PasswordData {\r\n    current: string;\r\n    new: string;\r\n    confirm: string;\r\n}\r\n\r\nconst Profile: React.FC = () => {\r\n    const { user } = useAuth();\r\n\r\n    const [profile, setProfile] = useState<ProfileData>({\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        phone: '',\r\n    });\r\n\r\n    const [password, setPassword] = useState<PasswordData>({\r\n        current: '',\r\n        new: '',\r\n        confirm: '',\r\n    });\r\n\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [loadingPassword, setLoadingPassword] = useState(false);\r\n\r\n    // Fonction pour récupérer le token depuis le AuthContext\r\n    const getAuthToken = () => {\r\n        // D'abord essayer depuis le contexte user\r\n        if (user?.token) {\r\n            return user.token;\r\n        }\r\n        \r\n        // Sinon essayer depuis localStorage\r\n        const storedUser = localStorage.getItem('friendlybanks_user');\r\n        if (storedUser) {\r\n            try {\r\n                const userData = JSON.parse(storedUser);\r\n                return userData.token;\r\n            } catch (error) {\r\n                console.error('Erreur lors de la lecture du token:', error);\r\n            }\r\n        }\r\n        \r\n        console.log('Aucun token trouvé');\r\n        return null;\r\n    };\r\n\r\n    // Fonction pour rafraîchir le token\r\n    const refreshToken = async () => {\r\n        try {\r\n            const refreshToken = localStorage.getItem('friendlybanks_refresh');\r\n            if (!refreshToken) {\r\n                throw new Error('No refresh token available');\r\n            }\r\n\r\n            const response = await fetch(`${API_BASE_URL}/token/refresh/`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ refresh: refreshToken }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const data = await response.json();\r\n                const newAccessToken = data.access;\r\n                \r\n                // Mettre à jour le token dans localStorage\r\n                const storedUser = localStorage.getItem('friendlybanks_user');\r\n                if (storedUser) {\r\n                    const userData = JSON.parse(storedUser);\r\n                    userData.token = newAccessToken;\r\n                    localStorage.setItem('friendlybanks_user', JSON.stringify(userData));\r\n                }\r\n                \r\n                return newAccessToken;\r\n            } else {\r\n                throw new Error('Failed to refresh token');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error refreshing token:', error);\r\n            // Rediriger vers la page de connexion ou logout\r\n            setMessage('Session expirée. Veuillez vous reconnecter.');\r\n            return null;\r\n        }\r\n    };\r\n\r\n    // Fonction pour faire une requête avec gestion automatique du token\r\n    const authenticatedFetch = async (url: string, options: RequestInit = {}) => {\r\n        let token = getAuthToken();\r\n        \r\n        if (!token) {\r\n            throw new Error('No token available');\r\n        }\r\n\r\n        // Première tentative avec le token actuel\r\n        let response = await fetch(url, {\r\n            ...options,\r\n            headers: {\r\n                ...options.headers,\r\n                'Authorization': `Bearer ${token}`,\r\n                'Content-Type': 'application/json',\r\n            },\r\n        });\r\n\r\n        // Si 401, essayer de rafraîchir le token et refaire la requête\r\n        if (response.status === 401) {\r\n            console.log('Token expired, trying to refresh...');\r\n            const newToken = await refreshToken();\r\n            \r\n            if (newToken) {\r\n                response = await fetch(url, {\r\n                    ...options,\r\n                    headers: {\r\n                        ...options.headers,\r\n                        'Authorization': `Bearer ${newToken}`,\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                });\r\n            }\r\n        }\r\n\r\n        return response;\r\n    };\r\n\r\n    // Charger les données du profil au montage du composant\r\n    useEffect(() => {\r\n        fetchProfile();\r\n    }, []);\r\n\r\n    const fetchProfile = async () => {\r\n        try {\r\n            const response = await authenticatedFetch(`${API_BASE_URL}/user/profile/`);\r\n\r\n            if (response.ok) {\r\n                const userData = await response.json();\r\n                setProfile({\r\n                    firstName: userData.firstName || '',\r\n                    lastName: userData.lastName || '',\r\n                    email: userData.email || '',\r\n                    phone: userData.phone || '',\r\n                });\r\n            } else {\r\n                // Fallback avec les données de l'utilisateur connecté\r\n                setProfile({\r\n                    firstName: user?.username?.split(' ')[0] || '',\r\n                    lastName: user?.username?.split(' ')[1] || '',\r\n                    email: '', // Sera rempli depuis l'API\r\n                    phone: '',\r\n                });\r\n            }\r\n        } catch (error) {\r\n            console.error('Erreur lors du chargement du profil:', error);\r\n            setMessage('Erreur lors du chargement du profil');\r\n            setTimeout(() => setMessage(''), 3000);\r\n        }\r\n    };\r\n\r\n    const handleProfileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setProfile({ ...profile, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handlePasswordChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setPassword({ ...password, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleProfileSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await authenticatedFetch(`${API_BASE_URL}/user/profile/`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify(profile),\r\n            });\r\n\r\n            if (response.ok) {\r\n                const responseData = await response.json();\r\n                console.log('Success response:', responseData);\r\n                setMessage('Profil mis à jour avec succès !');\r\n                // Optionnel: recharger les données du profil\r\n                await fetchProfile();\r\n            } else {\r\n                const errorData = await response.json();\r\n                console.log('Error response:', errorData);\r\n                setMessage(errorData.message || 'Erreur lors de la mise à jour du profil');\r\n            }\r\n        } catch (error) {\r\n            console.error('Network or parsing error:', error);\r\n            setMessage('Erreur lors de la mise à jour du profil');\r\n        } finally {\r\n            setLoading(false);\r\n            setTimeout(() => setMessage(''), 3000);\r\n        }\r\n    };\r\n\r\n    const handlePasswordSubmit = async (e: React.FormEvent) => {\r\n        e.preventDefault();\r\n        \r\n        if (password.new !== password.confirm) {\r\n            setMessage('Les nouveaux mots de passe ne correspondent pas.');\r\n            setTimeout(() => setMessage(''), 3000);\r\n            return;\r\n        }\r\n        \r\n        if (password.new.length < 8) {\r\n            setMessage('Le nouveau mot de passe doit faire au moins 8 caractères.');\r\n            setTimeout(() => setMessage(''), 3000);\r\n            return;\r\n        }\r\n\r\n        setLoadingPassword(true);\r\n\r\n        try {\r\n            const response = await authenticatedFetch(`${API_BASE_URL}/user/change-password/`, {\r\n                method: 'PUT',\r\n                body: JSON.stringify({\r\n                    currentPassword: password.current,\r\n                    newPassword: password.new,\r\n                }),\r\n            });\r\n\r\n            if (response.ok) {\r\n                setMessage('Mot de passe mis à jour avec succès !');\r\n                setPassword({ current: '', new: '', confirm: '' });\r\n            } else {\r\n                const errorData = await response.json();\r\n                setMessage(errorData.message || 'Erreur lors du changement de mot de passe');\r\n            }\r\n        } catch (error) {\r\n            console.error('Erreur lors du changement de mot de passe:', error);\r\n            setMessage('Erreur lors du changement de mot de passe');\r\n        } finally {\r\n            setLoadingPassword(false);\r\n            setTimeout(() => setMessage(''), 3000);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <header style={styles.header}>\r\n                <h2 style={styles.headerTitle}>Paramètres du Compte</h2>\r\n            </header>\r\n\r\n            {message && (\r\n                <div style={{\r\n                    ...styles.message,\r\n                    ...(message.includes('succès') ? styles.successMessage : styles.errorMessage)\r\n                }}>\r\n                    {message}\r\n                </div>\r\n            )}\r\n\r\n            <div style={styles.grid}>\r\n                {/* Section Informations Personnelles */}\r\n                <div style={styles.card}>\r\n                    <h3 style={styles.cardTitle}>Informations Personnelles</h3>\r\n                    <form onSubmit={handleProfileSubmit} style={styles.form}>\r\n                        <InputField \r\n                            label=\"Prénom\" \r\n                            name=\"firstName\" \r\n                            value={profile.firstName} \r\n                            onChange={handleProfileChange} \r\n                            icon={faUser}\r\n                            required \r\n                        />\r\n                        <InputField \r\n                            label=\"Nom\" \r\n                            name=\"lastName\" \r\n                            value={profile.lastName} \r\n                            onChange={handleProfileChange} \r\n                            icon={faUser}\r\n                            required \r\n                        />\r\n                        <InputField \r\n                            label=\"Email\" \r\n                            name=\"email\" \r\n                            type=\"email\" \r\n                            value={profile.email} \r\n                            onChange={handleProfileChange} \r\n                            icon={faEnvelope}\r\n                            required \r\n                        />\r\n                        <InputField \r\n                            label=\"Téléphone\" \r\n                            name=\"phone\" \r\n                            type=\"tel\" \r\n                            value={profile.phone} \r\n                            onChange={handleProfileChange} \r\n                            icon={faPhone} \r\n                        />\r\n                        <button type=\"submit\" style={styles.button} disabled={loading}>\r\n                            <FontAwesomeIcon icon={faSave} style={{ marginRight: '8px' }} />\r\n                            {loading ? 'Enregistrement...' : 'Enregistrer les Modifications'}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n\r\n                {/* Section Mot de Passe */}\r\n                <div style={styles.card}>\r\n                    <h3 style={styles.cardTitle}>Changer le Mot de Passe</h3>\r\n                    <form onSubmit={handlePasswordSubmit} style={styles.form}>\r\n                        <InputField \r\n                            label=\"Mot de passe actuel\" \r\n                            name=\"current\" \r\n                            type=\"password\" \r\n                            value={password.current} \r\n                            onChange={handlePasswordChange} \r\n                            icon={faLock}\r\n                            required \r\n                        />\r\n                        <InputField \r\n                            label=\"Nouveau mot de passe\" \r\n                            name=\"new\" \r\n                            type=\"password\" \r\n                            value={password.new} \r\n                            onChange={handlePasswordChange} \r\n                            icon={faLock}\r\n                            required\r\n                            minLength={8} \r\n                        />\r\n                        <InputField \r\n                            label=\"Confirmer le nouveau mot de passe\" \r\n                            name=\"confirm\" \r\n                            type=\"password\" \r\n                            value={password.confirm} \r\n                            onChange={handlePasswordChange} \r\n                            icon={faLock}\r\n                            required \r\n                        />\r\n                        <button type=\"submit\" style={styles.button} disabled={loadingPassword}>\r\n                            {loadingPassword ? 'Changement...' : 'Changer le Mot de Passe'}\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\n// Sous-composant pour les champs avec typage approprié\r\ninterface InputFieldProps {\r\n    label: string;\r\n    name: string;\r\n    type?: string;\r\n    value: string;\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    icon: any;\r\n    required?: boolean;\r\n    minLength?: number;\r\n}\r\n\r\nconst InputField: React.FC<InputFieldProps> = ({ \r\n    label, \r\n    icon, \r\n    type = 'text',\r\n    required = false,\r\n    minLength,\r\n    ...props \r\n}) => (\r\n    <div style={{ marginBottom: '16px' }}>\r\n        <label style={styles.label}>\r\n            {label}\r\n            {required && <span style={{ color: '#ef4444' }}> *</span>}\r\n        </label>\r\n        <div style={{ position: 'relative' }}>\r\n            <FontAwesomeIcon icon={icon} style={styles.inputIcon} />\r\n            <input \r\n                style={styles.input} \r\n                type={type}\r\n                required={required}\r\n                minLength={minLength}\r\n                {...props} \r\n            />\r\n        </div>\r\n    </div>\r\n);\r\n\r\nconst styles: { [key: string]: React.CSSProperties } = {\r\n    header: { \r\n        marginBottom: '32px' \r\n    },\r\n    headerTitle: { \r\n        fontSize: '28px', \r\n        fontWeight: 'bold', \r\n        color: '#1f2937', \r\n        margin: 0 \r\n    },\r\n    grid: { \r\n        display: 'grid', \r\n        gridTemplateColumns: 'repeat(auto-fit, minmax(350px, 1fr))', \r\n        gap: '24px' \r\n    },\r\n    card: { \r\n        backgroundColor: 'white', \r\n        padding: '24px', \r\n        borderRadius: '12px', \r\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.08)' \r\n    },\r\n    cardTitle: { \r\n        fontSize: '20px', \r\n        fontWeight: 'bold', \r\n        color: '#1f2937', \r\n        margin: '0 0 24px 0', \r\n        borderBottom: '1px solid #e5e7eb', \r\n        paddingBottom: '12px' \r\n    },\r\n    form: { \r\n        display: 'flex', \r\n        flexDirection: 'column' \r\n    },\r\n    label: { \r\n        display: 'block', \r\n        marginBottom: '8px', \r\n        fontWeight: '600', \r\n        color: '#374151', \r\n        fontSize: '14px' \r\n    },\r\n    input: { \r\n        width: '100%', \r\n        padding: '10px 10px 10px 40px', \r\n        border: '1px solid #d1d5db', \r\n        borderRadius: '8px', \r\n        boxSizing: 'border-box', \r\n        fontSize: '16px',\r\n        transition: 'border-color 0.2s ease',\r\n    },\r\n    inputIcon: { \r\n        position: 'absolute', \r\n        top: '13px', \r\n        left: '12px', \r\n        color: '#9ca3af' \r\n    },\r\n    button: { \r\n        padding: '10px 16px', \r\n        backgroundColor: '#2563eb', \r\n        color: 'white', \r\n        border: 'none', \r\n        borderRadius: '8px', \r\n        cursor: 'pointer', \r\n        fontWeight: '600', \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center', \r\n        fontSize: '14px', \r\n        marginTop: '8px',\r\n        transition: 'background-color 0.2s ease',\r\n    },\r\n    message: {\r\n        padding: '12px',\r\n        borderRadius: '8px',\r\n        textAlign: 'center',\r\n        marginBottom: '24px',\r\n        fontWeight: 500,\r\n    },\r\n    successMessage: {\r\n        color: '#166534',\r\n        backgroundColor: '#dcfce7',\r\n        border: '1px solid #bbf7d0',\r\n    },\r\n    errorMessage: {\r\n        color: '#dc2626',\r\n        backgroundColor: '#fee2e2',\r\n        border: '1px solid #fecaca',\r\n    },\r\n};\r\n\r\nexport default Profile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}