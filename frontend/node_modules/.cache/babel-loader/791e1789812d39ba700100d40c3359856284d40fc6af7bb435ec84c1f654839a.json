{"ast":null,"code":"import React,{createContext,useState,useContext,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const rolePermissions={President:['manage_members','approve_loans','view_reports','manage_rules'],Treasurer:['manage_contributions','view_reports'],Secretary:['manage_meetings','view_reports'],Censor:['audit','view_reports'],Member:['make_contributions','request_loans','view_own_data'],Guest:[],Admin:['manage_all']};const AuthContext=/*#__PURE__*/createContext(undefined);export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);useEffect(()=>{// Load user from localStorage if exists\nconst storedUser=localStorage.getItem('friendlybanks_user');if(storedUser){setUser(JSON.parse(storedUser));}},[]);const login=async(username,password)=>{try{// Call backend token endpoint\nconst response=await fetch('http://localhost:8000/api/token/',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({username,password})});if(!response.ok){return false;}const data=await response.json();const accessToken=data.access;const refreshToken=data.refresh;// Fetch user info using access token\nconst userResponse=await fetch('http://localhost:8000/api/users/',{headers:{'Authorization':`Bearer ${accessToken}`}});if(!userResponse.ok){return false;}const users=await userResponse.json();// Find user info by username\nconst userInfo=users.find(u=>u.username===username);if(!userInfo){return false;}const loggedInUser={username:userInfo.username,role:userInfo.role.charAt(0).toUpperCase()+userInfo.role.slice(1),// capitalize first letter\ntoken:accessToken};localStorage.setItem('friendlybanks_user',JSON.stringify(loggedInUser));localStorage.setItem('friendlybanks_refresh',refreshToken);setUser(loggedInUser);return true;}catch(error){console.error('Login error:',error);return false;}};const logout=()=>{setUser(null);localStorage.removeItem('friendlybanks_user');};const hasPermission=permission=>{if(!user)return false;if(user.role==='Admin')return true;const permissions=rolePermissions[user.role]||[];return permissions.includes(permission);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout,isAuthenticated:!!user,hasPermission},children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsx","_jsx","rolePermissions","President","Treasurer","Secretary","Censor","Member","Guest","Admin","AuthContext","undefined","AuthProvider","_ref","children","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","username","password","response","fetch","method","headers","body","stringify","ok","data","json","accessToken","access","refreshToken","refresh","userResponse","users","userInfo","find","u","loggedInUser","role","charAt","toUpperCase","slice","token","setItem","error","console","logout","removeItem","hasPermission","permission","permissions","includes","Provider","value","isAuthenticated","useAuth","context","Error"],"sources":["D:/Projects/FriendlyBanks/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode, useEffect } from 'react';\r\n\r\nexport type Role = 'President' | 'Treasurer' | 'Secretary' | 'Censor' | 'Member' | 'Guest' | 'Admin';\r\n\r\ninterface User {\r\n  username: string;\r\n  role: Role;\r\n  token: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (username: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n  hasPermission: (permission: string) => boolean;\r\n}\r\n\r\nconst rolePermissions: Record<Role, string[]> = {\r\n  President: ['manage_members', 'approve_loans', 'view_reports', 'manage_rules'],\r\n  Treasurer: ['manage_contributions', 'view_reports'],\r\n  Secretary: ['manage_meetings', 'view_reports'],\r\n  Censor: ['audit', 'view_reports'],\r\n  Member: ['make_contributions', 'request_loans', 'view_own_data'],\r\n  Guest: [],\r\n  Admin: ['manage_all'],\r\n};\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Load user from localStorage if exists\r\n    const storedUser = localStorage.getItem('friendlybanks_user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string): Promise<boolean> => {\r\n    try {\r\n      // Call backend token endpoint\r\n      const response = await fetch('http://localhost:8000/api/token/', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n      if (!response.ok) {\r\n        return false;\r\n      }\r\n      const data = await response.json();\r\n      const accessToken = data.access;\r\n      const refreshToken = data.refresh;\r\n\r\n      // Fetch user info using access token\r\n      const userResponse = await fetch('http://localhost:8000/api/users/', {\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      if (!userResponse.ok) {\r\n        return false;\r\n      }\r\n      const users = await userResponse.json();\r\n      // Find user info by username\r\n      const userInfo = users.find((u: any) => u.username === username);\r\n      if (!userInfo) {\r\n        return false;\r\n      }\r\n\r\n      const loggedInUser: User = {\r\n        username: userInfo.username,\r\n        role: userInfo.role.charAt(0).toUpperCase() + userInfo.role.slice(1), // capitalize first letter\r\n        token: accessToken,\r\n      };\r\n\r\n      localStorage.setItem('friendlybanks_user', JSON.stringify(loggedInUser));\r\n      localStorage.setItem('friendlybanks_refresh', refreshToken);\r\n      setUser(loggedInUser);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('friendlybanks_user');\r\n  };\r\n\r\n  const hasPermission = (permission: string): boolean => {\r\n    if (!user) return false;\r\n    if (user.role === 'Admin') return true;\r\n    const permissions = rolePermissions[user.role] || [];\r\n    return permissions.includes(permission);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, logout, isAuthenticated: !!user, hasPermission }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,UAAU,CAAaC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAkBzF,KAAM,CAAAC,eAAuC,CAAG,CAC9CC,SAAS,CAAE,CAAC,gBAAgB,CAAE,eAAe,CAAE,cAAc,CAAE,cAAc,CAAC,CAC9EC,SAAS,CAAE,CAAC,sBAAsB,CAAE,cAAc,CAAC,CACnDC,SAAS,CAAE,CAAC,iBAAiB,CAAE,cAAc,CAAC,CAC9CC,MAAM,CAAE,CAAC,OAAO,CAAE,cAAc,CAAC,CACjCC,MAAM,CAAE,CAAC,oBAAoB,CAAE,eAAe,CAAE,eAAe,CAAC,CAChEC,KAAK,CAAE,EAAE,CACTC,KAAK,CAAE,CAAC,YAAY,CACtB,CAAC,CAED,KAAM,CAAAC,WAAW,cAAGd,aAAa,CAA8Be,SAAS,CAAC,CAEzE,MAAO,MAAM,CAAAC,YAAY,CAAGC,IAAA,EAA2C,IAA1C,CAAEC,QAAkC,CAAC,CAAAD,IAAA,CAChE,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGnB,QAAQ,CAAc,IAAI,CAAC,CAEnDE,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAkB,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAC7D,GAAIF,UAAU,CAAE,CACdD,OAAO,CAACI,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC,CACjC,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAK,KAAK,CAAG,KAAAA,CAAOC,QAAgB,CAAEC,QAAgB,GAAuB,CAC5E,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,kCAAkC,CAAE,CAC/DC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAET,IAAI,CAACU,SAAS,CAAC,CAAEP,QAAQ,CAAEC,QAAS,CAAC,CAC7C,CAAC,CAAC,CACF,GAAI,CAACC,QAAQ,CAACM,EAAE,CAAE,CAChB,MAAO,MAAK,CACd,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAClC,KAAM,CAAAC,WAAW,CAAGF,IAAI,CAACG,MAAM,CAC/B,KAAM,CAAAC,YAAY,CAAGJ,IAAI,CAACK,OAAO,CAEjC;AACA,KAAM,CAAAC,YAAY,CAAG,KAAM,CAAAZ,KAAK,CAAC,kCAAkC,CAAE,CACnEE,OAAO,CAAE,CACP,eAAe,CAAE,UAAUM,WAAW,EACxC,CACF,CAAC,CAAC,CACF,GAAI,CAACI,YAAY,CAACP,EAAE,CAAE,CACpB,MAAO,MAAK,CACd,CACA,KAAM,CAAAQ,KAAK,CAAG,KAAM,CAAAD,YAAY,CAACL,IAAI,CAAC,CAAC,CACvC;AACA,KAAM,CAAAO,QAAQ,CAAGD,KAAK,CAACE,IAAI,CAAEC,CAAM,EAAKA,CAAC,CAACnB,QAAQ,GAAKA,QAAQ,CAAC,CAChE,GAAI,CAACiB,QAAQ,CAAE,CACb,MAAO,MAAK,CACd,CAEA,KAAM,CAAAG,YAAkB,CAAG,CACzBpB,QAAQ,CAAEiB,QAAQ,CAACjB,QAAQ,CAC3BqB,IAAI,CAAEJ,QAAQ,CAACI,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAGN,QAAQ,CAACI,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAAE;AACtEC,KAAK,CAAEd,WACT,CAAC,CAEDhB,YAAY,CAAC+B,OAAO,CAAC,oBAAoB,CAAE7B,IAAI,CAACU,SAAS,CAACa,YAAY,CAAC,CAAC,CACxEzB,YAAY,CAAC+B,OAAO,CAAC,uBAAuB,CAAEb,YAAY,CAAC,CAC3DpB,OAAO,CAAC2B,YAAY,CAAC,CACrB,MAAO,KAAI,CACb,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACpC,MAAO,MAAK,CACd,CACF,CAAC,CAED,KAAM,CAAAE,MAAM,CAAGA,CAAA,GAAM,CACnBpC,OAAO,CAAC,IAAI,CAAC,CACbE,YAAY,CAACmC,UAAU,CAAC,oBAAoB,CAAC,CAC/C,CAAC,CAED,KAAM,CAAAC,aAAa,CAAIC,UAAkB,EAAc,CACrD,GAAI,CAACxC,IAAI,CAAE,MAAO,MAAK,CACvB,GAAIA,IAAI,CAAC6B,IAAI,GAAK,OAAO,CAAE,MAAO,KAAI,CACtC,KAAM,CAAAY,WAAW,CAAGtD,eAAe,CAACa,IAAI,CAAC6B,IAAI,CAAC,EAAI,EAAE,CACpD,MAAO,CAAAY,WAAW,CAACC,QAAQ,CAACF,UAAU,CAAC,CACzC,CAAC,CAED,mBACEtD,IAAA,CAACS,WAAW,CAACgD,QAAQ,EAACC,KAAK,CAAE,CAAE5C,IAAI,CAAEO,KAAK,CAAE8B,MAAM,CAAEQ,eAAe,CAAE,CAAC,CAAC7C,IAAI,CAAEuC,aAAc,CAAE,CAAAxC,QAAA,CAC1FA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAA+C,OAAO,CAAGA,CAAA,GAAuB,CAC5C,KAAM,CAAAC,OAAO,CAAGhE,UAAU,CAACY,WAAW,CAAC,CACvC,GAAI,CAACoD,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}