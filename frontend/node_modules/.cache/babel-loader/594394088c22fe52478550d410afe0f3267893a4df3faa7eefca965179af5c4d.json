{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\FriendlyBanks\\\\frontend\\\\src\\\\context\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Rôles basés sur la charte Friendly Banks\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Configuration de l'URL de base de l'API\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000/api';\n\n// === SYSTÈME DE PERMISSIONS BASÉ SUR LA CHARTE FRIENDLY BANKS ===\nconst rolePermissions = {\n  // PRÉSIDENT - Coordonne tout le projet (Article 3.5)\n  president: [\n  // Gestion complète des membres\n  'view_members', 'manage_members', 'create_members', 'edit_members', 'delete_members',\n  // Gestion complète des contributions \n  'view_contributions', 'manage_contributions', 'add_contributions', 'edit_contributions',\n  // Gestion complète des prêts (Comité de Gestion - Article 4)\n  'view_loans', 'manage_loans', 'approve_loans', 'reject_loans', 'edit_loans',\n  // Sanctions et exclusions (Article 6)\n  'view_sanctions', 'manage_sanctions', 'apply_sanctions', 'exclude_members',\n  // Gouvernance complète (Article 5.4)\n  'view_governance', 'manage_governance', 'organize_sessions', 'modify_charter',\n  // Rapports et transparence (Article 3.4)\n  'view_reports', 'generate_reports', 'view_all_transactions',\n  // Administration système\n  'manage_system', 'export_data', 'view_logs',\n  // Berry points et calculs\n  'manage_berry_points', 'view_berry_calculations'],\n  // CENSEUR - Co-préside + Audit (Article 3.5 + Article 5.4)\n  censeur: [\n  // Gestion des membres (consultation et modification limitée)\n  'view_members', 'manage_members', 'edit_members',\n  // Gestion des contributions (consultation et audit)\n  'view_contributions', 'manage_contributions', 'add_contributions',\n  // Gestion des prêts (approbation dans le comité)\n  'view_loans', 'manage_loans', 'approve_loans', 'reject_loans',\n  // Sanctions (participe aux décisions disciplinaires)\n  'view_sanctions', 'manage_sanctions', 'apply_sanctions',\n  // Gouvernance (co-préside le comité exécutif)\n  'view_governance', 'manage_governance', 'organize_sessions',\n  // Audit et transparence\n  'view_reports', 'generate_reports', 'view_all_transactions',\n  // Berry points\n  'view_berry_calculations',\n  // Export pour audit\n  'export_data'],\n  // TRÉSORIER - Gère le compte commun (Article 3.2)\n  treasurer: [\n  // Consultation des membres\n  'view_members',\n  // Gestion complète des contributions (responsabilité principale)\n  'view_contributions', 'manage_contributions', 'add_contributions', 'edit_contributions',\n  // Consultation des prêts (suivi financier)\n  'view_loans', 'track_loan_repayments',\n  // Pas de sanctions directes\n  'view_sanctions',\n  // Transparence financière (Article 3.4)\n  'view_governance', 'generate_financial_reports',\n  // Rapports financiers mensuels\n  'view_reports', 'generate_reports', 'view_financial_transactions',\n  // Berry points (calculs financiers)\n  'view_berry_calculations',\n  // Export financier\n  'export_financial_data'],\n  // SÉCRÉCOM - Secrétariat et communications\n  secrecom: [\n  // Gestion administrative des membres\n  'view_members', 'manage_members', 'edit_members',\n  // Consultation des contributions\n  'view_contributions', 'add_contributions',\n  // Consultation des prêts\n  'view_loans',\n  // Gestion des sanctions (secrétariat)\n  'view_sanctions',\n  // Gouvernance (organisation des réunions - Article 3.6-3.7)\n  'view_governance', 'manage_governance', 'organize_meetings',\n  // Rapports (secrétariat)\n  'view_reports', 'generate_meeting_reports',\n  // Communications\n  'manage_communications', 'send_notifications'],\n  // COMPTABLE - Aide à la comptabilité\n  accountant: [\n  // Consultation des membres\n  'view_members',\n  // Gestion des contributions (aide comptable)\n  'view_contributions', 'manage_contributions', 'add_contributions',\n  // Consultation des prêts (analyse financière)\n  'view_loans', 'view_loan_details',\n  // Consultation des sanctions\n  'view_sanctions',\n  // Consultation de la gouvernance\n  'view_governance',\n  // Rapports comptables\n  'view_reports', 'generate_accounting_reports',\n  // Berry points (calculs)\n  'view_berry_calculations',\n  // Export comptable\n  'export_accounting_data'],\n  // MEMBRE - Participe aux décisions + Cotisations + Emprunts\n  member: [\n  // Consultation des membres (transparence)\n  'view_members',\n  // Ses propres contributions\n  'view_contributions', 'add_own_contributions', 'view_own_contributions',\n  // Demandes de prêts (Article 4)\n  'view_loans', 'request_loans', 'view_own_loans',\n  // Consultation des sanctions\n  'view_sanctions',\n  // Participation à la gouvernance (Article 5.5-5.6)\n  'view_governance', 'participate_in_votes',\n  // Consultation des rapports mensuels\n  'view_reports', 'view_monthly_reports',\n  // Ses propres Berry points\n  'view_own_berry_points',\n  // Profil personnel\n  'manage_own_profile'],\n  // INVITÉ - Accès très limité\n  guest: [\n  // Consultation limitée\n  'view_basic_info',\n  // Profil personnel seulement\n  'manage_own_profile'],\n  // ADMIN - Accès technique complet (séparé de la gouvernance métier)\n  admin: ['manage_all', 'system_admin', 'technical_maintenance']\n};\n\n// Noms d'affichage des rôles en français\nconst roleDisplayNames = {\n  president: 'Président',\n  treasurer: 'Trésorier',\n  secrecom: 'Sécrécom',\n  censeur: 'Censeur',\n  accountant: 'Comptable',\n  member: 'Membre',\n  guest: 'Invité',\n  admin: 'Administrateur'\n};\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Load user from localStorage if exists\n    const storedUser = localStorage.getItem('friendlybanks_user');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      // Call backend token endpoint\n      const response = await fetch(`${API_BASE_URL}/token/`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (!response.ok) {\n        return false;\n      }\n      const data = await response.json();\n      const accessToken = data.access;\n      const refreshToken = data.refresh;\n\n      // Fetch user info using access token\n      const userResponse = await fetch(`${API_BASE_URL}/users/`, {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`\n        }\n      });\n      if (!userResponse.ok) {\n        return false;\n      }\n      const users = await userResponse.json();\n      // Find user info by username\n      const userInfo = users.find(u => u.username === username);\n      if (!userInfo) {\n        return false;\n      }\n      const loggedInUser = {\n        id: userInfo.id || userInfo.username,\n        username: userInfo.username,\n        role: userInfo.role,\n        // Utiliser le rôle directement du backend\n        token: accessToken\n      };\n      localStorage.setItem('friendlybanks_user', JSON.stringify(loggedInUser));\n      localStorage.setItem('friendlybanks_refresh', refreshToken);\n      setUser(loggedInUser);\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('friendlybanks_user');\n    localStorage.removeItem('friendlybanks_refresh');\n  };\n  const hasPermission = permission => {\n    if (!user) return false;\n\n    // L'admin technique a tous les droits\n    if (user.role === 'admin') return true;\n\n    // Le président a tous les droits métier\n    if (user.role === 'president') {\n      return rolePermissions.president.includes(permission) || permission !== 'system_admin';\n    }\n\n    // Vérifier les permissions spécifiques du rôle\n    const permissions = rolePermissions[user.role] || [];\n    return permissions.includes(permission);\n  };\n  const getRoleDisplayName = role => {\n    return roleDisplayNames[role] || role;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      isAuthenticated: !!user,\n      hasPermission,\n      getRoleDisplayName\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","rolePermissions","president","censeur","treasurer","secrecom","accountant","member","guest","admin","roleDisplayNames","AuthContext","undefined","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","login","username","password","response","fetch","method","headers","body","stringify","ok","data","json","accessToken","access","refreshToken","refresh","userResponse","users","userInfo","find","u","loggedInUser","id","role","token","setItem","error","console","logout","removeItem","hasPermission","permission","includes","permissions","getRoleDisplayName","Provider","value","isAuthenticated","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/Projects/FriendlyBanks/frontend/src/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useState, useContext, ReactNode, useEffect } from 'react';\r\n\r\n// Rôles basés sur la charte Friendly Banks\r\nexport type Role = 'president' | 'treasurer' | 'secrecom' | 'censeur' | 'accountant' | 'member' | 'guest' | 'admin';\r\n\r\ninterface User {\r\n  id: string;\r\n  username: string;\r\n  role: Role;\r\n  token: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  login: (username: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  isAuthenticated: boolean;\r\n  hasPermission: (permission: string) => boolean;\r\n  getRoleDisplayName: (role: Role) => string;\r\n}\r\n\r\n// Configuration de l'URL de base de l'API\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://127.0.0.1:8000/api';\r\n\r\n// === SYSTÈME DE PERMISSIONS BASÉ SUR LA CHARTE FRIENDLY BANKS ===\r\nconst rolePermissions: Record<Role, string[]> = {\r\n  // PRÉSIDENT - Coordonne tout le projet (Article 3.5)\r\n  president: [\r\n    // Gestion complète des membres\r\n    'view_members', 'manage_members', 'create_members', 'edit_members', 'delete_members',\r\n    // Gestion complète des contributions \r\n    'view_contributions', 'manage_contributions', 'add_contributions', 'edit_contributions',\r\n    // Gestion complète des prêts (Comité de Gestion - Article 4)\r\n    'view_loans', 'manage_loans', 'approve_loans', 'reject_loans', 'edit_loans',\r\n    // Sanctions et exclusions (Article 6)\r\n    'view_sanctions', 'manage_sanctions', 'apply_sanctions', 'exclude_members',\r\n    // Gouvernance complète (Article 5.4)\r\n    'view_governance', 'manage_governance', 'organize_sessions', 'modify_charter',\r\n    // Rapports et transparence (Article 3.4)\r\n    'view_reports', 'generate_reports', 'view_all_transactions',\r\n    // Administration système\r\n    'manage_system', 'export_data', 'view_logs',\r\n    // Berry points et calculs\r\n    'manage_berry_points', 'view_berry_calculations'\r\n  ],\r\n\r\n  // CENSEUR - Co-préside + Audit (Article 3.5 + Article 5.4)\r\n  censeur: [\r\n    // Gestion des membres (consultation et modification limitée)\r\n    'view_members', 'manage_members', 'edit_members',\r\n    // Gestion des contributions (consultation et audit)\r\n    'view_contributions', 'manage_contributions', 'add_contributions',\r\n    // Gestion des prêts (approbation dans le comité)\r\n    'view_loans', 'manage_loans', 'approve_loans', 'reject_loans',\r\n    // Sanctions (participe aux décisions disciplinaires)\r\n    'view_sanctions', 'manage_sanctions', 'apply_sanctions',\r\n    // Gouvernance (co-préside le comité exécutif)\r\n    'view_governance', 'manage_governance', 'organize_sessions',\r\n    // Audit et transparence\r\n    'view_reports', 'generate_reports', 'view_all_transactions',\r\n    // Berry points\r\n    'view_berry_calculations',\r\n    // Export pour audit\r\n    'export_data'\r\n  ],\r\n\r\n  // TRÉSORIER - Gère le compte commun (Article 3.2)\r\n  treasurer: [\r\n    // Consultation des membres\r\n    'view_members',\r\n    // Gestion complète des contributions (responsabilité principale)\r\n    'view_contributions', 'manage_contributions', 'add_contributions', 'edit_contributions',\r\n    // Consultation des prêts (suivi financier)\r\n    'view_loans', 'track_loan_repayments',\r\n    // Pas de sanctions directes\r\n    'view_sanctions',\r\n    // Transparence financière (Article 3.4)\r\n    'view_governance', 'generate_financial_reports',\r\n    // Rapports financiers mensuels\r\n    'view_reports', 'generate_reports', 'view_financial_transactions',\r\n    // Berry points (calculs financiers)\r\n    'view_berry_calculations',\r\n    // Export financier\r\n    'export_financial_data'\r\n  ],\r\n\r\n  // SÉCRÉCOM - Secrétariat et communications\r\n  secrecom: [\r\n    // Gestion administrative des membres\r\n    'view_members', 'manage_members', 'edit_members',\r\n    // Consultation des contributions\r\n    'view_contributions', 'add_contributions',\r\n    // Consultation des prêts\r\n    'view_loans',\r\n    // Gestion des sanctions (secrétariat)\r\n    'view_sanctions',\r\n    // Gouvernance (organisation des réunions - Article 3.6-3.7)\r\n    'view_governance', 'manage_governance', 'organize_meetings',\r\n    // Rapports (secrétariat)\r\n    'view_reports', 'generate_meeting_reports',\r\n    // Communications\r\n    'manage_communications', 'send_notifications'\r\n  ],\r\n\r\n  // COMPTABLE - Aide à la comptabilité\r\n  accountant: [\r\n    // Consultation des membres\r\n    'view_members',\r\n    // Gestion des contributions (aide comptable)\r\n    'view_contributions', 'manage_contributions', 'add_contributions',\r\n    // Consultation des prêts (analyse financière)\r\n    'view_loans', 'view_loan_details',\r\n    // Consultation des sanctions\r\n    'view_sanctions',\r\n    // Consultation de la gouvernance\r\n    'view_governance',\r\n    // Rapports comptables\r\n    'view_reports', 'generate_accounting_reports',\r\n    // Berry points (calculs)\r\n    'view_berry_calculations',\r\n    // Export comptable\r\n    'export_accounting_data'\r\n  ],\r\n\r\n  // MEMBRE - Participe aux décisions + Cotisations + Emprunts\r\n  member: [\r\n    // Consultation des membres (transparence)\r\n    'view_members',\r\n    // Ses propres contributions\r\n    'view_contributions', 'add_own_contributions', 'view_own_contributions',\r\n    // Demandes de prêts (Article 4)\r\n    'view_loans', 'request_loans', 'view_own_loans',\r\n    // Consultation des sanctions\r\n    'view_sanctions',\r\n    // Participation à la gouvernance (Article 5.5-5.6)\r\n    'view_governance', 'participate_in_votes',\r\n    // Consultation des rapports mensuels\r\n    'view_reports', 'view_monthly_reports',\r\n    // Ses propres Berry points\r\n    'view_own_berry_points',\r\n    // Profil personnel\r\n    'manage_own_profile'\r\n  ],\r\n\r\n  // INVITÉ - Accès très limité\r\n  guest: [\r\n    // Consultation limitée\r\n    'view_basic_info',\r\n    // Profil personnel seulement\r\n    'manage_own_profile'\r\n  ],\r\n\r\n  // ADMIN - Accès technique complet (séparé de la gouvernance métier)\r\n  admin: [\r\n    'manage_all', 'system_admin', 'technical_maintenance'\r\n  ]\r\n};\r\n\r\n// Noms d'affichage des rôles en français\r\nconst roleDisplayNames: Record<Role, string> = {\r\n  president: 'Président',\r\n  treasurer: 'Trésorier', \r\n  secrecom: 'Sécrécom',\r\n  censeur: 'Censeur',\r\n  accountant: 'Comptable',\r\n  member: 'Membre',\r\n  guest: 'Invité',\r\n  admin: 'Administrateur'\r\n};\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  useEffect(() => {\r\n    // Load user from localStorage if exists\r\n    const storedUser = localStorage.getItem('friendlybanks_user');\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username: string, password: string): Promise<boolean> => {\r\n    try {\r\n      // Call backend token endpoint\r\n      const response = await fetch(`${API_BASE_URL}/token/`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        return false;\r\n      }\r\n      \r\n      const data = await response.json();\r\n      const accessToken = data.access;\r\n      const refreshToken = data.refresh;\r\n\r\n      // Fetch user info using access token\r\n      const userResponse = await fetch(`${API_BASE_URL}/users/`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${accessToken}`,\r\n        },\r\n      });\r\n      \r\n      if (!userResponse.ok) {\r\n        return false;\r\n      }\r\n      \r\n      const users = await userResponse.json();\r\n      // Find user info by username\r\n      const userInfo = users.find((u: any) => u.username === username);\r\n      if (!userInfo) {\r\n        return false;\r\n      }\r\n\r\n      const loggedInUser: User = {\r\n        id: userInfo.id || userInfo.username,\r\n        username: userInfo.username,\r\n        role: userInfo.role as Role, // Utiliser le rôle directement du backend\r\n        token: accessToken,\r\n      };\r\n\r\n      localStorage.setItem('friendlybanks_user', JSON.stringify(loggedInUser));\r\n      localStorage.setItem('friendlybanks_refresh', refreshToken);\r\n      setUser(loggedInUser);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setUser(null);\r\n    localStorage.removeItem('friendlybanks_user');\r\n    localStorage.removeItem('friendlybanks_refresh');\r\n  };\r\n\r\n  const hasPermission = (permission: string): boolean => {\r\n    if (!user) return false;\r\n    \r\n    // L'admin technique a tous les droits\r\n    if (user.role === 'admin') return true;\r\n    \r\n    // Le président a tous les droits métier\r\n    if (user.role === 'president') {\r\n      return rolePermissions.president.includes(permission) || permission !== 'system_admin';\r\n    }\r\n    \r\n    // Vérifier les permissions spécifiques du rôle\r\n    const permissions = rolePermissions[user.role] || [];\r\n    return permissions.includes(permission);\r\n  };\r\n\r\n  const getRoleDisplayName = (role: Role): string => {\r\n    return roleDisplayNames[role] || role;\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ \r\n      user, \r\n      login, \r\n      logout, \r\n      isAuthenticated: !!user, \r\n      hasPermission,\r\n      getRoleDisplayName \r\n    }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = (): AuthContextType => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}